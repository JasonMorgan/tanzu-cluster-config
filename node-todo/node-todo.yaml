apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "1"
  creationTimestamp: "2020-11-17T00:01:54Z"
  generation: 1
  labels:
    chart: node-todo-0.1.4
  name: node-todo
  namespace: default
spec:
  replicas: 3
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: node-todo
      release: node-todo
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: node-todo
        release: node-todo
    spec:
      containers:
      - image: migmartri/node-todo-app:latest
        imagePullPolicy: Always
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /
            port: 8080
            scheme: HTTP
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        name: node-todo
        ports:
        - containerPort: 8080
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /
            port: 8080
            scheme: HTTP
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /app/config
          name: config
      terminationGracePeriodSeconds: 30
      volumes:
      - configMap:
          defaultMode: 420
          name: node-todo
        name: config
---
apiVersion: v1
kind: Service
metadata:
  labels:
    chart: node-todo-0.1.4
  name: node-todo-node-todo
  namespace: default
spec:
  ports:
  - name: http
    port: 80
    protocol: TCP
    targetPort: 8080
  selector:
    app: node-todo
  sessionAffinity: None
  type: ClusterIP
---
apiVersion: v1
data:
  database.js: |-
    module.exports = {
      localUrl: 'mongodb://node-todo-mongodb/todo-default'
    };
kind: ConfigMap
metadata:
  labels:
    chart: node-todo-0.1.4
  name: node-todo-node-todo
  namespace: default